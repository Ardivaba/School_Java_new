import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Date;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.google.gson.Gson;


public class Headlines {

	private static Gson gson;
	private static ArrayList<HeadlineEntry> headlineEntries;
	
	private static FileWriter fw = null; 
	private static BufferedWriter bw = null; 
	private static PrintWriter pw = null;
	
	private static String filePath = "headlines.txt";
	
	public static void main(String[] args) throws IOException {
		gson = new Gson();
		fw = new FileWriter(filePath, true); 
		bw = new BufferedWriter(fw);
		pw = new PrintWriter(bw);
		headlineEntries = new ArrayList<HeadlineEntry>();
		
		try {
			Document document = getDocument("http://rust.facepunch.com/blog/");
			headlineEntries = loadHeadlineEntries("headlines.txt");
			System.out.println(headlineEntries.size());
			headlineEntries = findHeadlines(document);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static ArrayList<HeadlineEntry> loadHeadlineEntries(String filePath) throws IOException {
		ArrayList<HeadlineEntry> entries = new ArrayList<HeadlineEntry>();
		
		try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
		    String line;
		    while ((line = br.readLine()) != null) {
		       HeadlineEntry entry = gson.fromJson(line, HeadlineEntry.class);
		       entries.add(entry);
		    }
		}
		
		return entries;
	}
	
	public static ArrayList<HeadlineEntry> findHeadlines(Document document) throws IOException {
		ArrayList<HeadlineEntry> entries = new ArrayList<HeadlineEntry>();
		
		Elements headlines = document.select(".hero-body");
		
		for(Element headline : headlines) {
			String title = headline.select(".title").html();
			String url = headline.absUrl("href");
			
			HeadlineEntry headlineEntry = new HeadlineEntry();
			headlineEntry.date = new Date();
			headlineEntry.url = url;
			headlineEntry.title = title;
			
			boolean found = false;
			for(HeadlineEntry oldEntry : headlineEntries) {
				System.out.println("Comparing " + headlineEntry.title + " with " + oldEntry.title);
				if(headlineEntry.title == oldEntry.title) {
					found = true;
				}
			}
			
			if(!found) {
				entries.add(headlineEntry);
				System.out.println("Found new headline: " + headlineEntry.title);
				pw.println(gson.toJson(headlineEntry));
			}
		}
		
		pw.flush();
		
		return entries;
	}
	
	public static Document getDocument(String url) throws IOException {
		return Jsoup.connect(url)
				.timeout(4000)
				.userAgent(
						"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36")
				.referrer("http://www.google.com")
				.get();
	}

}
