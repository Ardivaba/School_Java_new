package ee.school.hibernate;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import ee.school.hibernate.entity.Product;
import ee.school.hibernate.entity.Shop;

public class ShopManager {
    
    static EntityManager em;

    public static void main(String[] args) {
    	
        EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("test1");
        em = entityManagerFactory.createEntityManager();
        
        createDemoData();
        
        listShopsAndTheirProducts();
        searchFromShop(null, "");
    }
    
    public static void searchFromShop(Shop shop, String search) {
    	String queryString = "select p from Product as p where shop = :shop and lower(p.name) LIKE lower(:search)";
    	Query query = em.createQuery(queryString, Product.class);
    	query.setParameter("search", "%" + search + "%");
    	query.setParameter("shop", shop);
    	List<Product> products = query.getResultList();
    	
    	System.out.println("Search result for " + search + ":");
    	for(Product product : products) {
    		System.out.println("\n" + product.getName());
    	}
    }
    
    public static void listShopsAndTheirProducts() {
    	List<Shop> shops = em.createQuery("select s from Shop s order by s.id", Shop.class).getResultList();
    	
    	System.out.println("Total number of shops: " + shops.size());
    	
    	for(Shop shop : shops) {
    		System.out.print("Shop name: ");
    		System.out.println(shop);
    		Query query = em.createQuery("select p from Product p where shop = :shop", Product.class);
    		query.setParameter("shop", shop);
    		
    		System.out.println("Products:");
    		List<Product> products = query.getResultList();
    		
    		for(Product product : products) {
    			System.out.println("\t" + product.getName());
    		}
    	}
    	
    }
    
    public static void createDemoData() {
    	List<Shop> shops = em.createQuery("select s from Shop s order by s.id", Shop.class).getResultList();
    	
    	if(shops.size() > 0)
    		return;
    	
    	String[] demoShops = new String[]{ "Walmart", "Barneys", "Sears" };
    	em.getTransaction().begin();
    	
    	for(String shopName : demoShops) {
    		Shop shop = new Shop();
        	shop.setName(shopName);
        	
        	em.persist(shop);
        	
        	Product product = new Product();
        	product.setName("Apple");
        	product.setShop(shop);
        	em.persist(product);
        	
        	product = new Product();
        	product.setName("Tomato");
        	product.setShop(shop);
        	em.persist(product);
        	
        	product = new Product();
        	product.setName("Banana");
        	product.setShop(shop);
        	em.persist(product);
	
    	}    	
    	em.getTransaction().commit();
    }

}
